/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Cocodrop, CocodropInterface } from "../../src/Cocodrop";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfs",
        type: "string",
      },
    ],
    name: "NewAirdrop",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
    ],
    name: "StoppedAirdrop",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "airdrops",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_ipfs",
        type: "string",
      },
    ],
    name: "createAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "redeemed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
    ],
    name: "stopAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyClaim",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b79806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635ddb08451461006757806360db5082146100aa5780637306239f146100f25780637efcf12814610107578063839044851461011a578063b97bff1a1461012d575b600080fd5b6100956100753660046108b2565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6100bd6100b83660046108e2565b610140565b6040516100a194939291906001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b6101056101003660046108fb565b610188565b005b6101056101153660046108e2565b61038c565b6100956101283660046109a7565b61052f565b61010561013b3660046109a7565b6105a9565b6000818154811061015057600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03928316945090929091169084565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af11580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff9190610a7a565b6102425760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b60408051608081018252338152602081018781526001600160a01b03878116938301938452606083018781526000805460018181018355828052955160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180549286166001600160a01b031993841617905594517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56486015595517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5658501805491909416961695909517909155517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5669091015590546103469190610ab2565b7fa07dc081e463c1b1f74a9fbaeb0d45590e0121e6dd8a976da3765021ba40c797868686868660405161037d959493929190610ac5565b60405180910390a25050505050565b60008082815481106103a0576103a0610b14565b6000918252602090912060049091020180549091506001600160a01b031633146103f95760405162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b6044820152606401610239565b600081600301541161043f5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd1bdc1c1959608a1b6044820152606401610239565b6003810180546000909155600282015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c19190610a7a565b6104ff5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610239565b60405183907f4f403e266a39854b8e8550830afc0d95e2865e035d4ee613860d9ba38322e93e90600090a2505050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810183905260009081906054016040516020818303038152906040528051906020012090506105a0836000878154811061058857610588610b14565b90600052602060002090600402016001015483610803565b95945050505050565b60008084815481106105bd576105bd610b14565b9060005260206000209060040201600301549050808311156106215760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742061697264726f702062616c616e6365000000006044820152606401610239565b600084815260016020908152604080832033845290915290205460ff161561067e5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995919595b595960821b6044820152606401610239565b61068984848461052f565b6106ca5760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b2103932b232b6b83a34b7b760711b6044820152606401610239565b60008481526001602081815260408084203385529091528220805460ff1916909117905580548491908690811061070357610703610b14565b906000526020600020906004020160030160008282546107239190610ab2565b9091555050600080548590811061073c5761073c610b14565b600091825260209091206004918202016002015460405163a9059cbb60e01b81523392810192909252602482018590526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190610a7a565b50837fba7975764e321f07896c9c9852213d675ea0ab36b67e22a7e6d762b0fddd30d9846040516107f591815260200190565b60405180910390a250505050565b6000826108108584610819565b14949350505050565b600081815b845181101561085e5761084a8286838151811061083d5761083d610b14565b6020026020010151610868565b91508061085681610b2a565b91505061081e565b5090505b92915050565b6000818310610884576000828152602084905260409020610893565b60008381526020839052604090205b9392505050565b6001600160a01b03811681146108af57600080fd5b50565b600080604083850312156108c557600080fd5b8235915060208301356108d78161089a565b809150509250929050565b6000602082840312156108f457600080fd5b5035919050565b60008060008060006080868803121561091357600080fd5b8535945060208601356109258161089a565b935060408601359250606086013567ffffffffffffffff8082111561094957600080fd5b818801915088601f83011261095d57600080fd5b81358181111561096c57600080fd5b89602082850101111561097e57600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156109bc57600080fd5b833592506020808501359250604085013567ffffffffffffffff808211156109e357600080fd5b818701915087601f8301126109f757600080fd5b813581811115610a0957610a09610991565b8060051b604051601f19603f83011681018181108582111715610a2e57610a2e610991565b60405291825284820192508381018501918a831115610a4c57600080fd5b938501935b82851015610a6a57843584529385019392850192610a51565b8096505050505050509250925092565b600060208284031215610a8c57600080fd5b8151801515811461089357600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561086257610862610a9c565b8581526001600160a01b0385166020820152604081018490526080606082018190528101829052818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610b3c57610b3c610a9c565b506001019056fea264697066735822122036481a9ad4241297e5b7d1d5cf1b7ab19cae2f9a940f2ce63a9a317c89579ca364736f6c63430008110033";

type CocodropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CocodropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cocodrop__factory extends ContractFactory {
  constructor(...args: CocodropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cocodrop> {
    return super.deploy(overrides || {}) as Promise<Cocodrop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cocodrop {
    return super.attach(address) as Cocodrop;
  }
  override connect(signer: Signer): Cocodrop__factory {
    return super.connect(signer) as Cocodrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CocodropInterface {
    return new utils.Interface(_abi) as CocodropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cocodrop {
    return new Contract(address, _abi, signerOrProvider) as Cocodrop;
  }
}
