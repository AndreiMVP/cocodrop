/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Cocodrop, CocodropInterface } from "../../src/Cocodrop";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfs",
        type: "string",
      },
    ],
    name: "NewAirdrop",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "airdrops",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_ipfs",
        type: "string",
      },
    ],
    name: "createAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "redeemed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610629806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635287ad37146100515780635ddb08451461006657806360db5082146100a95780637306239f146100df575b600080fd5b61006461005f366004610399565b6100f2565b005b610094610074366004610475565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6100bc6100b73660046104a5565b610160565b604080519384526001600160a01b039092166020840152908201526060016100a0565b6100646100ed3660046104be565b61019f565b60008381526001602081815260408084206001600160a01b038716808652908352818520805460ff1916909417909355805192835290820183905285917fa04423efd0b9735f064ee725d3e76156fdeb82e31d96a2c7c320953ff7886a38910160405180910390a250505050565b6000818154811061017057600080fd5b60009182526020909120600390910201805460018201546002909201549092506001600160a01b039091169083565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af11580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610554565b6102585760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640160405180910390fd5b604080516060810182528681526001600160a01b0386811660208301908152928201868152600080546001808201835582805294517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360039092029182015594517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564860180546001600160a01b0319169190941617909255517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565909301929092559054610325919061057d565b7fa07dc081e463c1b1f74a9fbaeb0d45590e0121e6dd8a976da3765021ba40c797868686868660405161035c9594939291906105a4565b60405180910390a25050505050565b6001600160a01b038116811461038057600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156103ae57600080fd5b833592506020808501356103c18161036b565b9250604085013567ffffffffffffffff808211156103de57600080fd5b818701915087601f8301126103f257600080fd5b81358181111561040457610404610383565b8060051b604051601f19603f8301168101818110858211171561042957610429610383565b60405291825284820192508381018501918a83111561044757600080fd5b938501935b828510156104655784358452938501939285019261044c565b8096505050505050509250925092565b6000806040838503121561048857600080fd5b82359150602083013561049a8161036b565b809150509250929050565b6000602082840312156104b757600080fd5b5035919050565b6000806000806000608086880312156104d657600080fd5b8535945060208601356104e88161036b565b935060408601359250606086013567ffffffffffffffff8082111561050c57600080fd5b818801915088601f83011261052057600080fd5b81358181111561052f57600080fd5b89602082850101111561054157600080fd5b9699959850939650602001949392505050565b60006020828403121561056657600080fd5b8151801515811461057657600080fd5b9392505050565b8181038181111561059e57634e487b7160e01b600052601160045260246000fd5b92915050565b8581526001600160a01b0385166020820152604081018490526080606082018190528101829052818360a0830137600081830160a090810191909152601f909201601f1916010194935050505056fea2646970667358221220a21d3ccc152279eda2e27f7c96597b0854ca826f5b2af288fe618db44a0fc09d64736f6c63430008110033";

type CocodropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CocodropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cocodrop__factory extends ContractFactory {
  constructor(...args: CocodropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cocodrop> {
    return super.deploy(overrides || {}) as Promise<Cocodrop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cocodrop {
    return super.attach(address) as Cocodrop;
  }
  override connect(signer: Signer): Cocodrop__factory {
    return super.connect(signer) as Cocodrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CocodropInterface {
    return new utils.Interface(_abi) as CocodropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cocodrop {
    return new Contract(address, _abi, signerOrProvider) as Cocodrop;
  }
}
