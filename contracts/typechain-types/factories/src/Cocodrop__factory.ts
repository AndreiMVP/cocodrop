/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Cocodrop, CocodropInterface } from "../../src/Cocodrop";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfs",
        type: "string",
      },
    ],
    name: "NewAirdrop",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "airdrops",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_ipfs",
        type: "string",
      },
    ],
    name: "createAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "redeemed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyClaim",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061093d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635ddb08451461005c57806360db50821461009f5780637306239f146100d557806383904485146100ea578063b97bff1a146100fd575b600080fd5b61008a61006a366004610676565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6100b26100ad3660046106a6565b610110565b604080519384526001600160a01b03909216602084015290820152606001610096565b6100e86100e33660046106bf565b61014f565b005b61008a6100f836600461076b565b61031c565b6100e861010b36600461076b565b61036c565b6000818154811061012057600080fd5b60009182526020909120600390910201805460018201546002909201549092506001600160a01b039091169083565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af11580156101a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c6919061083e565b6102095760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b604080516060810182528681526001600160a01b0386811660208301908152928201868152600080546001808201835582805294517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360039092029182015594517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564860180546001600160a01b0319169190941617909255517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5659093019290925590546102d69190610876565b7fa07dc081e463c1b1f74a9fbaeb0d45590e0121e6dd8a976da3765021ba40c797868686868660405161030d959493929190610889565b60405180910390a25050505050565b6000806000339050806000528460205260406000209150610362846000888154811061034a5761034a6108d8565b906000526020600020906003020160000154846105c7565b9695505050505050565b6000808481548110610380576103806108d8565b9060005260206000209060030201600201549050808311156103e45760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742061697264726f702062616c616e63652e0000006044820152606401610200565b600084815260016020908152604080832033845290915290205460ff16156104415760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995919595b595960821b6044820152606401610200565b61044c84848461031c565b61048e5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b2103932b232b6b83a34b7b71760691b6044820152606401610200565b60008481526001602081815260408084203385529091528220805460ff191690911790558054849190869081106104c7576104c76108d8565b906000526020600020906003020160020160008282546104e79190610876565b90915550506000805485908110610500576105006108d8565b600091825260209091206003909102016001015460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610562573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610586919061083e565b50837fba7975764e321f07896c9c9852213d675ea0ab36b67e22a7e6d762b0fddd30d9846040516105b991815260200190565b60405180910390a250505050565b6000826105d485846105dd565b14949350505050565b600081815b84518110156106225761060e82868381518110610601576106016108d8565b602002602001015161062c565b91508061061a816108ee565b9150506105e2565b5090505b92915050565b6000818310610648576000828152602084905260409020610657565b60008381526020839052604090205b9392505050565b6001600160a01b038116811461067357600080fd5b50565b6000806040838503121561068957600080fd5b82359150602083013561069b8161065e565b809150509250929050565b6000602082840312156106b857600080fd5b5035919050565b6000806000806000608086880312156106d757600080fd5b8535945060208601356106e98161065e565b935060408601359250606086013567ffffffffffffffff8082111561070d57600080fd5b818801915088601f83011261072157600080fd5b81358181111561073057600080fd5b89602082850101111561074257600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561078057600080fd5b833592506020808501359250604085013567ffffffffffffffff808211156107a757600080fd5b818701915087601f8301126107bb57600080fd5b8135818111156107cd576107cd610755565b8060051b604051601f19603f830116810181811085821117156107f2576107f2610755565b60405291825284820192508381018501918a83111561081057600080fd5b938501935b8285101561082e57843584529385019392850192610815565b8096505050505050509250925092565b60006020828403121561085057600080fd5b8151801515811461065757600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561062657610626610860565b8581526001600160a01b0385166020820152604081018490526080606082018190528101829052818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161090057610900610860565b506001019056fea26469706673582212202d83790f8763f951c1372a8cdb349ac1b7838faec2acef7ee3a3083bad2a85a264736f6c63430008110033";

type CocodropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CocodropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cocodrop__factory extends ContractFactory {
  constructor(...args: CocodropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cocodrop> {
    return super.deploy(overrides || {}) as Promise<Cocodrop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cocodrop {
    return super.attach(address) as Cocodrop;
  }
  override connect(signer: Signer): Cocodrop__factory {
    return super.connect(signer) as Cocodrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CocodropInterface {
    return new utils.Interface(_abi) as CocodropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cocodrop {
    return new Contract(address, _abi, signerOrProvider) as Cocodrop;
  }
}
